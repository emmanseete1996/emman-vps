services:
  npm-web:
    image: jc21/nginx-proxy-manager:2
    container_name: npm-web
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    environment:
      DB_POSTGRES_HOST: npm-db
      DB_POSTGRES_PORT: 5432
      DB_POSTGRES_USER: ${POSTGRES_USER}
      DB_POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_POSTGRES_NAME: ${POSTGRES_DB}
    depends_on:
      npm-db:
        condition: service_healthy
    volumes:
      - web-data:/data
      - ssl-data:/etc/letsencrypt
    networks:
      - default
      - global-network
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:81/login || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s

  npm-db:
    image: postgres:18-alpine
    container_name: npm-db
    restart: always
    environment: 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s

volumes:
  web-data:
  ssl-data:
  db-data:

networks:
  default:
    internal: true
  global-network:
    external: true
    name: global-network
